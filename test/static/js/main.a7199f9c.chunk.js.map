{"version":3,"sources":["utils/hooks/useInitalState.js","utils/hooks/delete.js","utils/hooks/update.js","utils/hooks/Insert.js","components/TableApi.jsx","containers/App.js","serviceWorker.js","index.js"],"names":["useInitialState","API","useState","usuarios","user","setUser","useEffect","a","fetch","response","json","fetchData","userDelete","id_usuario","method","then","console","log","catch","error","userUpdate","id_user","name","lastName","secondName","ci","gender","city","redirect","text","result","userInsert","TableApi","initialState","stado","setStado","idUser","setIdUser","nombre","setNombre","apePaterno","setApePaterno","apeMaterno","setApeMaterno","setCi","genero","setGenero","direccion","setDireccion","actualizarUsers","Button","variant","onClick","valor","activo","Table","striped","bordered","hover","length","map","usuario","id","Fragment","key","apellido_paterno","apellido_materno","ape_p","ape_m","modificar","eliminar","Modal","show","Header","closeButton","Title","Body","Form","Group","controlId","Label","Control","type","value","placeholder","onInput","e","target","as","Footer","close","insert","actualizar","App","Container","fluid","style","textAlign","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.a7199f9c.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst useInitialState = (API) => {\n  const [user, setUser] = useState({ usuarios: [] });\n\n  // empty array as second argument equivalent to componentDidMount\n  useEffect(() => {\n    async function fetchData() {\n      const response = await fetch(API);\n      const json = await response.json();\n      setUser(json);\n    }\n    fetchData();\n  }, [API]);\n\n  return user;\n};\n\nexport default useInitialState;\n","const userDelete = (id_usuario) => {\n  var requestOptions = {\n    method: \"DELETE\",\n  };\n  fetch(\"http://localhost/usuario/\" + id_usuario + \"\", requestOptions)\n    .then(() => {\n      console.log(\"sucess\");\n    })\n    .catch((error) => console.log(\"error\", error));\n};\n\nexport default userDelete;\n","const userUpdate = (id_user, name, lastName, secondName, ci, gender, city) => {\n  var requestOptions = {\n    method: \"PUT\",\n    redirect: \"follow\",\n  };\n\n  fetch(\n    \"http://localhost/update/\" +\n      id_user +\n      \"/\" +\n      name +\n      \"/\" +\n      lastName +\n      \"/\" +\n      secondName +\n      \"/\" +\n      ci +\n      \"/\" +\n      gender +\n      \"/\" +\n      city +\n      \"/\",\n    requestOptions\n  )\n    .then((response) => response.text())\n    .then((result) => console.log(result))\n    .catch((error) => console.log(\"error\", error));\n};\nexport default userUpdate;\n","const userInsert = (name, lastName, secondName, ci, gender, city) => {\n  var requestOptions = {\n    method: \"POST\",\n    redirect: \"follow\",\n  };\n  fetch(\n    \"http://localhost/api/usuarios/\" +\n      name +\n      \"/\" +\n      lastName +\n      \"/\" +\n      secondName +\n      \"/\" +\n      ci +\n      \"/\" +\n      gender +\n      \"/\" +\n      city,\n    requestOptions\n  )\n    .then((response) => response.text())\n    .then((result) => console.log(result))\n    .catch((error) => console.log(\"error\", error));\n};\nexport default userInsert;\n","import React, { useState } from \"react\";\nimport { Table, Button, Modal, Form } from \"react-bootstrap\";\nimport useInitialState from \"../utils/hooks/useInitalState\";\nimport userDelete from \"../utils/hooks/delete\";\nimport userUpdate from \"../utils/hooks/update\";\nimport userInsert from \"../utils/hooks/Insert\";\nconst API = \"cienciadedatos.pro/\";\n\nfunction TableApi() {\n  const initialState = useInitialState(API);\n  const [stado, setStado] = useState(false);\n  const [idUser, setIdUser] = useState(null);\n  const [nombre, setNombre] = useState(null);\n  const [apePaterno, setApePaterno] = useState(null);\n  const [apeMaterno, setApeMaterno] = useState(null);\n  const [ci, setCi] = useState(null);\n  const [genero, setGenero] = useState(null);\n  const [direccion, setDireccion] = useState(null);\n\n  const eliminar = (id) => userDelete(id);\n  const activo = ({ valor }) => {\n    setStado(valor);\n  };\n  const insert = (name, lastName, secondName, ci, gender, city, { valor }) =>\n    userInsert(name, lastName, secondName, ci, gender, city);\n  function actualizar(\n    id_user,\n    name,\n    lastName,\n    secondName,\n    ci,\n    gender,\n    city,\n    { valor }\n  ) {\n    actualizarUsers(id_user, name, lastName, secondName, ci, gender, city);\n    setStado(valor);\n    setIdUser(null);\n    setNombre(null);\n    setApePaterno(null);\n    setApeMaterno(null);\n    setCi(null);\n    setGenero(null);\n    setDireccion(null);\n  }\n\n  const close = (\n    id_user,\n    name,\n    lastName,\n    secondName,\n    ci,\n    gender,\n    city,\n    { valor }\n  ) => {\n    setIdUser(null);\n    setNombre(null);\n    setApePaterno(null);\n    setApeMaterno(null);\n    setCi(null);\n    setGenero(null);\n    setDireccion(null);\n    setStado(valor);\n  };\n  const actualizarUsers = (\n    id_user,\n    name,\n    lastName,\n    secondName,\n    ci,\n    gender,\n    city\n  ) => {\n    userUpdate(id_user, name, lastName, secondName, ci, gender, city);\n  };\n\n  function modificar(\n    id,\n    { valor },\n    nombre,\n    ape_p,\n    ape_m,\n    ci,\n    genero,\n    direccion\n  ) {\n    setStado(valor);\n    setIdUser(id);\n    setNombre(nombre);\n    setApePaterno(ape_p);\n    setApeMaterno(ape_m);\n    setCi(ci);\n    setGenero(genero);\n    setDireccion(direccion);\n  }\n\n  return initialState === 0 ? (\n    <h1>Loading....</h1>\n  ) : (\n    <>\n      <Button variant=\"primary\" onClick={() => activo({ valor: true })}>\n        Agregar\n      </Button>\n      <Table striped bordered hover variant=\"dark\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Nombre</th>\n            <th>Apellido Paterno</th>\n            <th>Apellido Materno</th>\n            <th>C.I</th>\n            <th>Genero</th>\n            <th>Direccion</th>\n            <th>Modificar</th>\n            <th>Eliminar</th>\n          </tr>\n        </thead>\n        <tbody>\n          {initialState.usuarios.length > 0 &&\n            initialState.usuarios.map((usuario, id) => (\n              <React.Fragment key={id}>\n                <tr>\n                  <th>{usuario.id_usuario}</th>\n                  <th>{usuario.nombre}</th>\n                  <th>{usuario.apellido_paterno}</th>\n                  <th>{usuario.apellido_materno}</th>\n                  <th>{usuario.ci}</th>\n                  <th>{usuario.genero}</th>\n                  <th>{usuario.direccion}</th>\n                  <th>\n                    <Button\n                      variant=\"success\"\n                      onClick={() =>\n                        modificar(\n                          usuario.id_usuario,\n                          { valor: true },\n                          usuario.nombre,\n                          usuario.apellido_paterno,\n                          usuario.apellido_materno,\n                          usuario.ci,\n                          usuario.genero,\n                          usuario.direccion\n                        )\n                      }\n                    >\n                      Modificar\n                    </Button>\n                  </th>\n                  <th>\n                    <Button\n                      variant=\"danger\"\n                      onClick={() => eliminar(usuario.id_usuario)}\n                    >\n                      Eliminar\n                    </Button>\n                  </th>\n                </tr>\n              </React.Fragment>\n            ))}\n        </tbody>\n        {stado === true ? (\n          <Modal show={true}>\n            <Modal.Header closeButton onClick={() => setStado(false)}>\n              <Modal.Title>Modal heading</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <Form>\n                <Form.Group controlId=\"formGroupEmail\">\n                  <Form.Label>Nombre</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    value={nombre}\n                    placeholder=\"Nombre\"\n                    onInput={(e) => setNombre(e.target.value)}\n                  />\n                </Form.Group>\n                <Form.Group controlId=\"formGroupPassword\">\n                  <Form.Label>Apellido Paterno</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Apellido Paterno\"\n                    value={apePaterno}\n                    onInput={(e) => setApePaterno(e.target.value)}\n                  />\n                </Form.Group>\n                <Form.Group controlId=\"formGroupPassword\">\n                  <Form.Label>Apellido Materno</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Apellido Paterno\"\n                    value={apeMaterno}\n                    onInput={(e) => setApeMaterno(e.target.value)}\n                  />\n                </Form.Group>\n                <Form.Group controlId=\"formGroupPassword\">\n                  <Form.Label>C.I</Form.Label>\n                  <Form.Control\n                    type=\"num\"\n                    placeholder=\"C.I\"\n                    value={ci}\n                    onInput={(e) => setCi(e.target.value)}\n                  />\n                </Form.Group>\n                <Form.Group controlId=\"exampleForm.ControlSelect2\">\n                  <Form.Label>Genero</Form.Label>\n                  <Form.Control\n                    as=\"select\"\n                    value={genero}\n                    onInput={(e) => setGenero(e.target.value)}\n                  >\n                    <option>Femenino</option>\n                    <option>Masculino</option>\n                  </Form.Control>\n                </Form.Group>\n                <Form.Group controlId=\"formGroupPassword\">\n                  <Form.Label>Direccion</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Direaccion\"\n                    value={direccion}\n                    onInput={(e) => setDireccion(e.target.value)}\n                  />\n                </Form.Group>\n                <Modal.Footer>\n                  <Button\n                    variant=\"secondary\"\n                    onClick={() => {\n                      close(\n                        idUser,\n                        nombre,\n                        apePaterno,\n                        apeMaterno,\n                        ci,\n                        genero,\n                        direccion,\n                        { valor: false }\n                      );\n                    }}\n                  >\n                    Close\n                  </Button>\n                  {idUser === null ? (\n                    <Button\n                      variant=\"primary\"\n                      onClick={() =>\n                        insert(\n                          nombre,\n                          apePaterno,\n                          apeMaterno,\n                          ci,\n                          genero,\n                          direccion,\n                          { valor: false }\n                        )\n                      }\n                    >\n                      {idUser === null ? \"Agregar\" : \"Modificar\"}\n                    </Button>\n                  ) : (\n                    <Button\n                      variant=\"primary\"\n                      onClick={() =>\n                        actualizar(\n                          idUser,\n                          nombre,\n                          apePaterno,\n                          apeMaterno,\n                          ci,\n                          genero,\n                          direccion,\n                          { valor: false }\n                        )\n                      }\n                    >\n                      {idUser === null ? \"Agregar\" : \"Modificar\"}\n                    </Button>\n                  )}\n                </Modal.Footer>\n              </Form>\n            </Modal.Body>\n          </Modal>\n        ) : (\n          () => console.log(\"cerrado\")\n        )}\n      </Table>\n    </>\n  );\n}\n\nexport default TableApi;\n","import React, { Component } from \"react\";\nimport TableApi from \"../components/TableApi\";\nimport { Container } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Container fluid>\n        <h1 style={{ textAlign: \"center\" }}>Usuarios</h1>\n        <TableApi></TableApi>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./containers/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}