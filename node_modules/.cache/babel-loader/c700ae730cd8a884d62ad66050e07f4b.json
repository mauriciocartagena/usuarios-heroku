{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/usuarios/src/components/TableApi.jsx\";\nimport React, { useState, Component } from \"react\";\nimport { Table, Button, Modal, Form } from \"react-bootstrap\";\nimport userDelete from \"../utils/hooks/delete\";\nimport userUpdate from \"../utils/hooks/update\";\nimport userInsert from \"../utils/hooks/Insert\";\n\nclass TableApi extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      usuarios: []\n    };\n  }\n\n  componentWillMount() {\n    fetch(\"https://heroku-usuarios-api.herokuapp.com/usuarios\").then(response => {\n      return response.json();\n    }).then(empleados => {\n      this.setState({\n        usuarios: empleados\n      });\n      console.log(empleados);\n    });\n  }\n\n  render() {\n    // const initialState = useInitialState(API);\n    // const [stado, setStado] = useState(false);\n    // const [idUser, setIdUser] = useState(null);\n    // const [nombre, setNombre] = useState(null);\n    // const [apePaterno, setApePaterno] = useState(null);\n    // const [apeMaterno, setApeMaterno] = useState(null);\n    // const [ci, setCi] = useState(null);\n    // const [genero, setGenero] = useState(null);\n    // const [direccion, setDireccion] = useState(null);\n    // const eliminar = (id) => userDelete(id);\n    // const activo = ({ valor }) => {\n    //   setStado(valor);\n    // };\n    // const insert = (name, lastName, secondName, ci, gender, city, { valor }) =>\n    //   userInsert(name, lastName, secondName, ci, gender, city);\n    function actualizar(id_user, name, lastName, secondName, ci, gender, city, {\n      valor\n    }) {\n      actualizarUsers(id_user, name, lastName, secondName, ci, gender, city);\n      setStado(valor);\n      setIdUser(null);\n      setNombre(null);\n      setApePaterno(null);\n      setApeMaterno(null);\n      setCi(null);\n      setGenero(null);\n      setDireccion(null);\n    } // const close = (\n    //   id_user,\n    //   name,\n    //   lastName,\n    //   secondName,\n    //   ci,\n    //   gender,\n    //   city,\n    //   { valor }\n    // ) => {\n    //   setIdUser(null);\n    //   setNombre(null);\n    //   setApePaterno(null);\n    //   setApeMaterno(null);\n    //   setCi(null);\n    //   setGenero(null);\n    //   setDireccion(null);\n    //   setStado(valor);\n    // };\n    // const actualizarUsers = (\n    //   id_user,\n    //   name,\n    //   lastName,\n    //   secondName,\n    //   ci,\n    //   gender,\n    //   city\n    // ) => {\n    //   userUpdate(id_user, name, lastName, secondName, ci, gender, city);\n    // };\n\n\n    function modificar(id, {\n      valor\n    }, nombre, ape_p, ape_m, ci, genero, direccion) {\n      setStado(valor);\n      setIdUser(id);\n      setNombre(nombre);\n      setApePaterno(ape_p);\n      setApeMaterno(ape_m);\n      setCi(ci);\n      setGenero(genero);\n      setDireccion(direccion);\n    }\n\n    return this.state.usuarios === 0 ? /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }\n    }, \"Loading....\") : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\" // onClick={() => activo({ valor: true })}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }\n    }, \"Agregar\"), /*#__PURE__*/React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      variant: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }\n    }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }\n    }, \"Nombre\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 15\n      }\n    }, \"Apellido Paterno\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 15\n      }\n    }, \"Apellido Materno\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }\n    }, \"C.I\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 15\n      }\n    }, \"Genero\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }\n    }, \"Direccion\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 15\n      }\n    }, \"Modificar\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 15\n      }\n    }, \"Eliminar\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }\n    }, this.state.usuarios.length > 0 && this.state.usuarios.map((usuario, id) => /*#__PURE__*/React.createElement(React.Fragment, {\n      key: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }\n    }, usuario.id_usuario), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }\n    }, usuario.nombre), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }\n    }, usuario.apellido_paterno), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }\n    }, usuario.apellido_materno), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }\n    }, usuario.ci), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }\n    }, usuario.genero), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }\n    }, usuario.direccion), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"success\",\n      onClick: () => modificar(usuario.id_usuario, {\n        valor: true\n      }, usuario.nombre, usuario.apellido_paterno, usuario.apellido_materno, usuario.ci, usuario.genero, usuario.direccion),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 23\n      }\n    }, \"Modificar\")), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"danger\" // onClick={() => eliminar(usuario.id_usuario)}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 23\n      }\n    }, \"Eliminar\"))))))));\n  }\n\n}\n\nexport default TableApi;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/usuarios/src/components/TableApi.jsx"],"names":["React","useState","Component","Table","Button","Modal","Form","userDelete","userUpdate","userInsert","TableApi","constructor","props","state","usuarios","componentWillMount","fetch","then","response","json","empleados","setState","console","log","render","actualizar","id_user","name","lastName","secondName","ci","gender","city","valor","actualizarUsers","setStado","setIdUser","setNombre","setApePaterno","setApeMaterno","setCi","setGenero","setDireccion","modificar","id","nombre","ape_p","ape_m","genero","direccion","length","map","usuario","id_usuario","apellido_paterno","apellido_materno"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,KAAxB,EAA+BC,IAA/B,QAA2C,iBAA3C;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;;AAEA,MAAMC,QAAN,SAAuBR,SAAvB,CAAiC;AAC/BS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAb;AACD;;AACDC,EAAAA,kBAAkB,GAAG;AACnBC,IAAAA,KAAK,CAAC,oDAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAc;AAClB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KAHH,EAIGF,IAJH,CAISG,SAAD,IAAe;AACnB,WAAKC,QAAL,CAAc;AAAEP,QAAAA,QAAQ,EAAEM;AAAZ,OAAd;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AACD,KAPH;AAQD;;AACDI,EAAAA,MAAM,GAAG;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA,aAASC,UAAT,CACEC,OADF,EAEEC,IAFF,EAGEC,QAHF,EAIEC,UAJF,EAKEC,EALF,EAMEC,MANF,EAOEC,IAPF,EAQE;AAAEC,MAAAA;AAAF,KARF,EASE;AACAC,MAAAA,eAAe,CAACR,OAAD,EAAUC,IAAV,EAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,EAAtC,EAA0CC,MAA1C,EAAkDC,IAAlD,CAAf;AACAG,MAAAA,QAAQ,CAACF,KAAD,CAAR;AACAG,MAAAA,SAAS,CAAC,IAAD,CAAT;AACAC,MAAAA,SAAS,CAAC,IAAD,CAAT;AACAC,MAAAA,aAAa,CAAC,IAAD,CAAb;AACAC,MAAAA,aAAa,CAAC,IAAD,CAAb;AACAC,MAAAA,KAAK,CAAC,IAAD,CAAL;AACAC,MAAAA,SAAS,CAAC,IAAD,CAAT;AACAC,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,KArCM,CAuCP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,aAASC,SAAT,CACEC,EADF,EAEE;AAAEX,MAAAA;AAAF,KAFF,EAGEY,MAHF,EAIEC,KAJF,EAKEC,KALF,EAMEjB,EANF,EAOEkB,MAPF,EAQEC,SARF,EASE;AACAd,MAAAA,QAAQ,CAACF,KAAD,CAAR;AACAG,MAAAA,SAAS,CAACQ,EAAD,CAAT;AACAP,MAAAA,SAAS,CAACQ,MAAD,CAAT;AACAP,MAAAA,aAAa,CAACQ,KAAD,CAAb;AACAP,MAAAA,aAAa,CAACQ,KAAD,CAAb;AACAP,MAAAA,KAAK,CAACV,EAAD,CAAL;AACAW,MAAAA,SAAS,CAACO,MAAD,CAAT;AACAN,MAAAA,YAAY,CAACO,SAAD,CAAZ;AACD;;AAED,WAAO,KAAKpC,KAAL,CAAWC,QAAX,KAAwB,CAAxB,gBACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADK,gBAGL,uDACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB,CACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAME,oBAAC,KAAD;AAAO,MAAA,OAAO,MAAd;AAAe,MAAA,QAAQ,MAAvB;AAAwB,MAAA,KAAK,MAA7B;AAA8B,MAAA,OAAO,EAAC,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBARF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATF,CADF,CADF,eAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKD,KAAL,CAAWC,QAAX,CAAoBoC,MAApB,GAA6B,CAA7B,IACC,KAAKrC,KAAL,CAAWC,QAAX,CAAoBqC,GAApB,CAAwB,CAACC,OAAD,EAAUR,EAAV,kBACtB,oBAAC,KAAD,CAAO,QAAP;AAAgB,MAAA,GAAG,EAAEA,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKQ,OAAO,CAACC,UAAb,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,OAAO,CAACP,MAAb,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKO,OAAO,CAACE,gBAAb,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKF,OAAO,CAACG,gBAAb,CAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKH,OAAO,CAACtB,EAAb,CALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKsB,OAAO,CAACJ,MAAb,CANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKI,OAAO,CAACH,SAAb,CAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAC,SADV;AAEE,MAAA,OAAO,EAAE,MACPN,SAAS,CACPS,OAAO,CAACC,UADD,EAEP;AAAEpB,QAAAA,KAAK,EAAE;AAAT,OAFO,EAGPmB,OAAO,CAACP,MAHD,EAIPO,OAAO,CAACE,gBAJD,EAKPF,OAAO,CAACG,gBALD,EAMPH,OAAO,CAACtB,EAND,EAOPsB,OAAO,CAACJ,MAPD,EAQPI,OAAO,CAACH,SARD,CAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CARF,eA2BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAC,QADV,CAEE;AAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CA3BF,CADF,CADF,CAFJ,CAdF,CANF,CAHF;AAqED;;AA9K8B;;AAiLjC,eAAevC,QAAf","sourcesContent":["import React, { useState, Component } from \"react\";\nimport { Table, Button, Modal, Form } from \"react-bootstrap\";\nimport userDelete from \"../utils/hooks/delete\";\nimport userUpdate from \"../utils/hooks/update\";\nimport userInsert from \"../utils/hooks/Insert\";\n\nclass TableApi extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { usuarios: [] };\n  }\n  componentWillMount() {\n    fetch(\"https://heroku-usuarios-api.herokuapp.com/usuarios\")\n      .then((response) => {\n        return response.json();\n      })\n      .then((empleados) => {\n        this.setState({ usuarios: empleados });\n        console.log(empleados);\n      });\n  }\n  render() {\n    // const initialState = useInitialState(API);\n    // const [stado, setStado] = useState(false);\n    // const [idUser, setIdUser] = useState(null);\n    // const [nombre, setNombre] = useState(null);\n    // const [apePaterno, setApePaterno] = useState(null);\n    // const [apeMaterno, setApeMaterno] = useState(null);\n    // const [ci, setCi] = useState(null);\n    // const [genero, setGenero] = useState(null);\n    // const [direccion, setDireccion] = useState(null);\n\n    // const eliminar = (id) => userDelete(id);\n    // const activo = ({ valor }) => {\n    //   setStado(valor);\n    // };\n\n    // const insert = (name, lastName, secondName, ci, gender, city, { valor }) =>\n    //   userInsert(name, lastName, secondName, ci, gender, city);\n    function actualizar(\n      id_user,\n      name,\n      lastName,\n      secondName,\n      ci,\n      gender,\n      city,\n      { valor }\n    ) {\n      actualizarUsers(id_user, name, lastName, secondName, ci, gender, city);\n      setStado(valor);\n      setIdUser(null);\n      setNombre(null);\n      setApePaterno(null);\n      setApeMaterno(null);\n      setCi(null);\n      setGenero(null);\n      setDireccion(null);\n    }\n\n    // const close = (\n    //   id_user,\n    //   name,\n    //   lastName,\n    //   secondName,\n    //   ci,\n    //   gender,\n    //   city,\n    //   { valor }\n    // ) => {\n    //   setIdUser(null);\n    //   setNombre(null);\n    //   setApePaterno(null);\n    //   setApeMaterno(null);\n    //   setCi(null);\n    //   setGenero(null);\n    //   setDireccion(null);\n    //   setStado(valor);\n    // };\n    // const actualizarUsers = (\n    //   id_user,\n    //   name,\n    //   lastName,\n    //   secondName,\n    //   ci,\n    //   gender,\n    //   city\n    // ) => {\n    //   userUpdate(id_user, name, lastName, secondName, ci, gender, city);\n    // };\n\n    function modificar(\n      id,\n      { valor },\n      nombre,\n      ape_p,\n      ape_m,\n      ci,\n      genero,\n      direccion\n    ) {\n      setStado(valor);\n      setIdUser(id);\n      setNombre(nombre);\n      setApePaterno(ape_p);\n      setApeMaterno(ape_m);\n      setCi(ci);\n      setGenero(genero);\n      setDireccion(direccion);\n    }\n\n    return this.state.usuarios === 0 ? (\n      <h1>Loading....</h1>\n    ) : (\n      <>\n        <Button variant=\"primary\" \n        // onClick={() => activo({ valor: true })}\n        >\n          Agregar\n        </Button>\n        <Table striped bordered hover variant=\"dark\">\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Nombre</th>\n              <th>Apellido Paterno</th>\n              <th>Apellido Materno</th>\n              <th>C.I</th>\n              <th>Genero</th>\n              <th>Direccion</th>\n              <th>Modificar</th>\n              <th>Eliminar</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.usuarios.length > 0 &&\n              this.state.usuarios.map((usuario, id) => (\n                <React.Fragment key={id}>\n                  <tr>\n                    <th>{usuario.id_usuario}</th>\n                    <th>{usuario.nombre}</th>\n                    <th>{usuario.apellido_paterno}</th>\n                    <th>{usuario.apellido_materno}</th>\n                    <th>{usuario.ci}</th>\n                    <th>{usuario.genero}</th>\n                    <th>{usuario.direccion}</th>\n                    <th>\n                      <Button\n                        variant=\"success\"\n                        onClick={() =>\n                          modificar(\n                            usuario.id_usuario,\n                            { valor: true },\n                            usuario.nombre,\n                            usuario.apellido_paterno,\n                            usuario.apellido_materno,\n                            usuario.ci,\n                            usuario.genero,\n                            usuario.direccion\n                          )\n                        }\n                      >\n                        Modificar\n                      </Button>\n                    </th>\n                    <th>\n                      <Button\n                        variant=\"danger\"\n                        // onClick={() => eliminar(usuario.id_usuario)}\n                      >\n                        Eliminar\n                      </Button>\n                    </th>\n                  </tr>\n                </React.Fragment>\n              ))}\n          </tbody>\n        </Table>\n      </>\n    );\n  }\n}\n\nexport default TableApi;\n"]},"metadata":{},"sourceType":"module"}