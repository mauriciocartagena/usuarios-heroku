{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/usuarios/src/components/TableApi.jsx\";\nimport React, { useState, Component } from \"react\";\nimport { Table, Button, Modal, Form } from \"react-bootstrap\"; // import useInitialState from \"../utils/hooks/useInitalState\";\n\nimport userDelete from \"../utils/hooks/delete\";\nimport userUpdate from \"../utils/hooks/update\";\nimport userInsert from \"../utils/hooks/Insert\"; // const API = \"https://heroku-usuarios-api.herokuapp.com/usuarios\";\n\nclass TableApi extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      usuarios: [],\n      stado: false\n    };\n  }\n\n  componentWillMount() {\n    fetch(\"https://heroku-usuarios-api.herokuapp.com/usuarios\").then(response => {\n      return response.json();\n    }).then(empleados => {\n      this.setState({\n        usuarios: empleados\n      });\n      console.log(empleados);\n    });\n  }\n\n  render() {\n    // const [stado, setStado] = useState(false);\n    // // const [idUser, setIdUser] = useState(null);\n    // // const [nombre, setNombre] = useState(null);\n    // // const [apePaterno, setApePaterno] = useState(null);\n    // // const [apeMaterno, setApeMaterno] = useState(null);\n    // // const [ci, setCi] = useState(null);\n    // // const [genero, setGenero] = useState(null);\n    // // const [direccion, setDireccion] = useState(null);\n    // // const eliminar = (id) => userDelete(id);\n    // // const activo = ({ valor }) => {\n    // //   setStado(valor);\n    // // };\n    // // const insert = (name, lastName, secondName, ci, gender, city, { valor }) =>\n    // //   userInsert(name, lastName, secondName, ci, gender, city);\n    // // function actualizar(\n    // //   id_user,\n    // //   name,\n    // //   lastName,\n    // //   secondName,\n    // //   ci,\n    // //   gender,\n    // //   city,\n    // //   { valor }\n    // // ) {\n    // //   actualizarUsers(id_user, name, lastName, secondName, ci, gender, city);\n    // //   setStado(valor);\n    // //   setIdUser(null);\n    // //   setNombre(null);\n    // //   setApePaterno(null);\n    // //   setApeMaterno(null);\n    // //   setCi(null);\n    // //   setGenero(null);\n    // //   setDireccion(null);\n    // // }\n    // // const close = (\n    // //   id_user,\n    // //   name,\n    // //   lastName,\n    // //   secondName,\n    // //   ci,\n    // //   gender,\n    // //   city,\n    // //   { valor }\n    // // ) => {\n    // //   setIdUser(null);\n    // //   setNombre(null);\n    // //   setApePaterno(null);\n    // //   setApeMaterno(null);\n    // //   setCi(null);\n    // //   setGenero(null);\n    // //   setDireccion(null);\n    // //   setStado(valor);\n    // // };\n    // // const actualizarUsers = (\n    // //   id_user,\n    // //   name,\n    // //   lastName,\n    // //   secondName,\n    // //   ci,\n    // //   gender,\n    // //   city\n    // // ) => {\n    // //   userUpdate(id_user, name, lastName, secondName, ci, gender, city);\n    // // };\n    // // function modificar(\n    // //   id,\n    // //   { valor },\n    // //   nombre,\n    // //   ape_p,\n    // //   ape_m,\n    // //   ci,\n    // //   genero,\n    // //   direccion\n    // // ) {\n    // //   setStado(valor);\n    // //   setIdUser(id);\n    // //   setNombre(nombre);\n    // //   setApePaterno(ape_p);\n    // //   setApeMaterno(ape_m);\n    // //   setCi(ci);\n    // //   setGenero(genero);\n    // //   setDireccion(direccion);\n    // // }\n    return this.state.usuarios === 0 ? /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 7\n      }\n    }, \"Loading....\") : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\" //  onClick={() => activo({ valor: true })}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    }, \"Agregar\"), /*#__PURE__*/React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      variant: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }\n    }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 15\n      }\n    }, \"Nombre\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }\n    }, \"Apellido Paterno\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 15\n      }\n    }, \"Apellido Materno\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 15\n      }\n    }, \"C.I\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 15\n      }\n    }, \"Genero\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }\n    }, \"Direccion\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 15\n      }\n    }, \"Modificar\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 15\n      }\n    }, \"Eliminar\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }\n    }, this.state.usuarios.length > 0 && this.state.usuarios.map((usuario, id) => /*#__PURE__*/React.createElement(React.Fragment, {\n      key: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }\n    }, usuario.id_usuario), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }\n    }, usuario.nombre), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }\n    }, usuario.apellido_paterno), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }\n    }, usuario.apellido_materno), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }\n    }, usuario.ci), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }\n    }, usuario.genero), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 21\n      }\n    }, usuario.direccion), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"success\" // onClick={() =>\n      //   modificar(\n      //     usuario.id_usuario,\n      //     { valor: true },\n      //     usuario.nombre,\n      //     usuario.apellido_paterno,\n      //     usuario.apellido_materno,\n      //     usuario.ci,\n      //     usuario.genero,\n      //     usuario.direccion\n      //   )\n      // }\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 23\n      }\n    }, \"Modificar\")), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"danger\" // onClick={() => eliminar(usuario.id_usuario)}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 23\n      }\n    }, \"Eliminar\"))))))));\n  }\n\n}\n\nexport default TableApi;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/usuarios/src/components/TableApi.jsx"],"names":["React","useState","Component","Table","Button","Modal","Form","userDelete","userUpdate","userInsert","TableApi","constructor","props","state","usuarios","stado","componentWillMount","fetch","then","response","json","empleados","setState","console","log","render","length","map","usuario","id","id_usuario","nombre","apellido_paterno","apellido_materno","ci","genero","direccion"],"mappings":"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","sourcesContent":["import React, { useState, Component } from \"react\";\nimport { Table, Button, Modal, Form } from \"react-bootstrap\";\n// import useInitialState from \"../utils/hooks/useInitalState\";\nimport userDelete from \"../utils/hooks/delete\";\nimport userUpdate from \"../utils/hooks/update\";\nimport userInsert from \"../utils/hooks/Insert\";\n// const API = \"https://heroku-usuarios-api.herokuapp.com/usuarios\";\n\nclass TableApi extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { usuarios: [], stado: false };\n  }\n  componentWillMount() {\n    fetch(\"https://heroku-usuarios-api.herokuapp.com/usuarios\")\n      .then((response) => {\n        return response.json();\n      })\n      .then((empleados) => {\n        this.setState({ usuarios: empleados });\n        console.log(empleados);\n      });\n  }\n\n  render() {\n    // const [stado, setStado] = useState(false);\n    // // const [idUser, setIdUser] = useState(null);\n    // // const [nombre, setNombre] = useState(null);\n    // // const [apePaterno, setApePaterno] = useState(null);\n    // // const [apeMaterno, setApeMaterno] = useState(null);\n    // // const [ci, setCi] = useState(null);\n    // // const [genero, setGenero] = useState(null);\n    // // const [direccion, setDireccion] = useState(null);\n\n    // // const eliminar = (id) => userDelete(id);\n    // // const activo = ({ valor }) => {\n    // //   setStado(valor);\n    // // };\n\n    // // const insert = (name, lastName, secondName, ci, gender, city, { valor }) =>\n    // //   userInsert(name, lastName, secondName, ci, gender, city);\n    // // function actualizar(\n    // //   id_user,\n    // //   name,\n    // //   lastName,\n    // //   secondName,\n    // //   ci,\n    // //   gender,\n    // //   city,\n    // //   { valor }\n    // // ) {\n    // //   actualizarUsers(id_user, name, lastName, secondName, ci, gender, city);\n    // //   setStado(valor);\n    // //   setIdUser(null);\n    // //   setNombre(null);\n    // //   setApePaterno(null);\n    // //   setApeMaterno(null);\n    // //   setCi(null);\n    // //   setGenero(null);\n    // //   setDireccion(null);\n    // // }\n\n    // // const close = (\n    // //   id_user,\n    // //   name,\n    // //   lastName,\n    // //   secondName,\n    // //   ci,\n    // //   gender,\n    // //   city,\n    // //   { valor }\n    // // ) => {\n    // //   setIdUser(null);\n    // //   setNombre(null);\n    // //   setApePaterno(null);\n    // //   setApeMaterno(null);\n    // //   setCi(null);\n    // //   setGenero(null);\n    // //   setDireccion(null);\n    // //   setStado(valor);\n    // // };\n    // // const actualizarUsers = (\n    // //   id_user,\n    // //   name,\n    // //   lastName,\n    // //   secondName,\n    // //   ci,\n    // //   gender,\n    // //   city\n    // // ) => {\n    // //   userUpdate(id_user, name, lastName, secondName, ci, gender, city);\n    // // };\n\n    // // function modificar(\n    // //   id,\n    // //   { valor },\n    // //   nombre,\n    // //   ape_p,\n    // //   ape_m,\n    // //   ci,\n    // //   genero,\n    // //   direccion\n    // // ) {\n    // //   setStado(valor);\n    // //   setIdUser(id);\n    // //   setNombre(nombre);\n    // //   setApePaterno(ape_p);\n    // //   setApeMaterno(ape_m);\n    // //   setCi(ci);\n    // //   setGenero(genero);\n    // //   setDireccion(direccion);\n    // // }\n\n    return this.state.usuarios === 0 ? (\n      <h1>Loading....</h1>\n    ) : (\n      <>\n        <Button\n          variant=\"primary\"\n          //  onClick={() => activo({ valor: true })}\n        >\n          Agregar\n        </Button>\n        <Table striped bordered hover variant=\"dark\">\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Nombre</th>\n              <th>Apellido Paterno</th>\n              <th>Apellido Materno</th>\n              <th>C.I</th>\n              <th>Genero</th>\n              <th>Direccion</th>\n              <th>Modificar</th>\n              <th>Eliminar</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.usuarios.length > 0 &&\n              this.state.usuarios.map((usuario, id) => (\n                <React.Fragment key={id}>\n                  <tr>\n                    <th>{usuario.id_usuario}</th>\n                    <th>{usuario.nombre}</th>\n                    <th>{usuario.apellido_paterno}</th>\n                    <th>{usuario.apellido_materno}</th>\n                    <th>{usuario.ci}</th>\n                    <th>{usuario.genero}</th>\n                    <th>{usuario.direccion}</th>\n                    <th>\n                      <Button\n                        variant=\"success\"\n                        // onClick={() =>\n                        //   modificar(\n                        //     usuario.id_usuario,\n                        //     { valor: true },\n                        //     usuario.nombre,\n                        //     usuario.apellido_paterno,\n                        //     usuario.apellido_materno,\n                        //     usuario.ci,\n                        //     usuario.genero,\n                        //     usuario.direccion\n                        //   )\n                        // }\n                      >\n                        Modificar\n                      </Button>\n                    </th>\n                    <th>\n                      <Button\n                        variant=\"danger\"\n                        // onClick={() => eliminar(usuario.id_usuario)}\n                      >\n                        Eliminar\n                      </Button>\n                    </th>\n                  </tr>\n                </React.Fragment>\n              ))}\n          </tbody>\n          {/* {stado === true ? (\n            <Modal show={true}>\n              <Modal.Header closeButton onClick={() => setStado(false)}>\n                <Modal.Title>Modal heading</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <Form>\n                  <Form.Group controlId=\"formGroupEmail\">\n                    <Form.Label>Nombre</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      value={nombre}\n                      placeholder=\"Nombre\"\n                      onInput={(e) => setNombre(e.target.value)}\n                    />\n                  </Form.Group>\n                  <Form.Group controlId=\"formGroupPassword\">\n                    <Form.Label>Apellido Paterno</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      placeholder=\"Apellido Paterno\"\n                      value={apePaterno}\n                      onInput={(e) => setApePaterno(e.target.value)}\n                    />\n                  </Form.Group>\n                  <Form.Group controlId=\"formGroupPassword\">\n                    <Form.Label>Apellido Materno</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      placeholder=\"Apellido Paterno\"\n                      value={apeMaterno}\n                      onInput={(e) => setApeMaterno(e.target.value)}\n                    />\n                  </Form.Group>\n                  <Form.Group controlId=\"formGroupPassword\">\n                    <Form.Label>C.I</Form.Label>\n                    <Form.Control\n                      type=\"num\"\n                      placeholder=\"C.I\"\n                      value={ci}\n                      onInput={(e) => setCi(e.target.value)}\n                    />\n                  </Form.Group>\n                  <Form.Group controlId=\"exampleForm.ControlSelect2\">\n                    <Form.Label>Genero</Form.Label>\n                    <Form.Control\n                      as=\"select\"\n                      value={genero}\n                      onInput={(e) => setGenero(e.target.value)}\n                    >\n                      <option>Femenino</option>\n                      <option>Masculino</option>\n                    </Form.Control>\n                  </Form.Group>\n                  <Form.Group controlId=\"formGroupPassword\">\n                    <Form.Label>Direccion</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      placeholder=\"Direaccion\"\n                      value={direccion}\n                      onInput={(e) => setDireccion(e.target.value)}\n                    />\n                  </Form.Group>\n                  <Modal.Footer>\n                    <Button\n                      variant=\"secondary\"\n                      onClick={() => {\n                        close(\n                          idUser,\n                          nombre,\n                          apePaterno,\n                          apeMaterno,\n                          ci,\n                          genero,\n                          direccion,\n                          { valor: false }\n                        );\n                      }}\n                    >\n                      Close\n                    </Button>\n                    {idUser === null ? (\n                      <Button\n                        variant=\"primary\"\n                        onClick={() =>\n                          insert(\n                            nombre,\n                            apePaterno,\n                            apeMaterno,\n                            ci,\n                            genero,\n                            direccion,\n                            { valor: false }\n                          )\n                        }\n                      >\n                        {idUser === null ? \"Agregar\" : \"Modificar\"}\n                      </Button>\n                    ) : (\n                      <Button\n                        variant=\"primary\"\n                        onClick={() =>\n                          actualizar(\n                            idUser,\n                            nombre,\n                            apePaterno,\n                            apeMaterno,\n                            ci,\n                            genero,\n                            direccion,\n                            { valor: false }\n                          )\n                        }\n                      >\n                        {idUser === null ? \"Agregar\" : \"Modificar\"}\n                      </Button>\n                    )}\n                  </Modal.Footer>\n                </Form>\n              </Modal.Body>\n            </Modal>\n          ) : (\n            () => console.log(\"cerrado\")\n          )} */}\n        </Table>\n      </>\n    );\n  }\n}\n\nexport default TableApi;\n"]},"metadata":{},"sourceType":"module"}