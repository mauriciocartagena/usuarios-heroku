{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/usuarios/src/components/TableApi.jsx\";\nimport React, { useState, Component } from \"react\";\nimport { Table, Button, Modal, Form } from \"react-bootstrap\"; // import useInitialState from \"../utils/hooks/useInitalState\";\n\nimport userDelete from \"../utils/hooks/delete\";\nimport userUpdate from \"../utils/hooks/update\";\nimport userInsert from \"../utils/hooks/Insert\"; // const API = \"https://heroku-usuarios-api.herokuapp.com/usuarios\";\n\nclass TableApi extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      usuarios: []\n    };\n  }\n\n  componentWillMount() {\n    fetch(\"https://heroku-usuarios-api.herokuapp.com/usuarios\").then(response => {\n      return response.json();\n    }).then(empleados => {\n      this.setState({\n        usuarios: empleados\n      });\n      console.log(empleados);\n    });\n  }\n\n  render() {\n    // const initialState = useInitialState(API);\n    // const [stado, setStado] = useState(false);\n    // const [idUser, setIdUser] = useState(null);\n    // const [nombre, setNombre] = useState(null);\n    // const [apePaterno, setApePaterno] = useState(null);\n    // const [apeMaterno, setApeMaterno] = useState(null);\n    // const [ci, setCi] = useState(null);\n    // const [genero, setGenero] = useState(null);\n    // const [direccion, setDireccion] = useState(null);\n    // const eliminar = (id) => userDelete(id);\n    // const activo = ({ valor }) => {\n    //   setStado(valor);\n    // };\n    // const insert = (name, lastName, secondName, ci, gender, city, { valor }) =>\n    //   userInsert(name, lastName, secondName, ci, gender, city);\n    // function actualizar(\n    //   id_user,\n    //   name,\n    //   lastName,\n    //   secondName,\n    //   ci,\n    //   gender,\n    //   city,\n    //   { valor }\n    // ) {\n    //   actualizarUsers(id_user, name, lastName, secondName, ci, gender, city);\n    //   setStado(valor);\n    //   setIdUser(null);\n    //   setNombre(null);\n    //   setApePaterno(null);\n    //   setApeMaterno(null);\n    //   setCi(null);\n    //   setGenero(null);\n    //   setDireccion(null);\n    // }\n    // const close = (\n    //   id_user,\n    //   name,\n    //   lastName,\n    //   secondName,\n    //   ci,\n    //   gender,\n    //   city,\n    //   { valor }\n    // ) => {\n    //   setIdUser(null);\n    //   setNombre(null);\n    //   setApePaterno(null);\n    //   setApeMaterno(null);\n    //   setCi(null);\n    //   setGenero(null);\n    //   setDireccion(null);\n    //   setStado(valor);\n    // };\n    // const actualizarUsers = (\n    //   id_user,\n    //   name,\n    //   lastName,\n    //   secondName,\n    //   ci,\n    //   gender,\n    //   city\n    // ) => {\n    //   userUpdate(id_user, name, lastName, secondName, ci, gender, city);\n    // };\n    // function modificar(\n    //   id,\n    //   { valor },\n    //   nombre,\n    //   ape_p,\n    //   ape_m,\n    //   ci,\n    //   genero,\n    //   direccion\n    // ) {\n    //   setStado(valor);\n    //   setIdUser(id);\n    //   setNombre(nombre);\n    //   setApePaterno(ape_p);\n    //   setApeMaterno(ape_m);\n    //   setCi(ci);\n    //   setGenero(genero);\n    //   setDireccion(direccion);\n    // }\n    return this.state.usuarios === 0 ? /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }\n    }, \"Loading....\") : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }\n    }) // <>\n    //   <Button variant=\"primary\" onClick={() => activo({ valor: true })}>\n    //     Agregar\n    //   </Button>\n    //   <Table striped bordered hover variant=\"dark\">\n    //     <thead>\n    //       <tr>\n    //         <th>#</th>\n    //         <th>Nombre</th>\n    //         <th>Apellido Paterno</th>\n    //         <th>Apellido Materno</th>\n    //         <th>C.I</th>\n    //         <th>Genero</th>\n    //         <th>Direccion</th>\n    //         <th>Modificar</th>\n    //         <th>Eliminar</th>\n    //       </tr>\n    //     </thead>\n    //     <tbody>\n    //       {this.state.usuarios.length > 0 &&\n    //         this.state.usuarios.map((usuario, id) => (\n    //           <React.Fragment key={id}>\n    //             <tr>\n    //               <th>{usuario.id_usuario}</th>\n    //               <th>{usuario.nombre}</th>\n    //               <th>{usuario.apellido_paterno}</th>\n    //               <th>{usuario.apellido_materno}</th>\n    //               <th>{usuario.ci}</th>\n    //               <th>{usuario.genero}</th>\n    //               <th>{usuario.direccion}</th>\n    //               <th>\n    //                 <Button\n    //                   variant=\"success\"\n    //                   onClick={() =>\n    //                     modificar(\n    //                       usuario.id_usuario,\n    //                       { valor: true },\n    //                       usuario.nombre,\n    //                       usuario.apellido_paterno,\n    //                       usuario.apellido_materno,\n    //                       usuario.ci,\n    //                       usuario.genero,\n    //                       usuario.direccion\n    //                     )\n    //                   }\n    //                 >\n    //                   Modificar\n    //                 </Button>\n    //               </th>\n    //               <th>\n    //                 <Button\n    //                   variant=\"danger\"\n    //                   onClick={() => eliminar(usuario.id_usuario)}\n    //                 >\n    //                   Eliminar\n    //                 </Button>\n    //               </th>\n    //             </tr>\n    //           </React.Fragment>\n    //         ))}\n    //     </tbody>\n    //     {stado === true ? (\n    //       <Modal show={true}>\n    //         <Modal.Header closeButton onClick={() => setStado(false)}>\n    //           <Modal.Title>Modal heading</Modal.Title>\n    //         </Modal.Header>\n    //         <Modal.Body>\n    //           <Form>\n    //             <Form.Group controlId=\"formGroupEmail\">\n    //               <Form.Label>Nombre</Form.Label>\n    //               <Form.Control\n    //                 type=\"text\"\n    //                 value={nombre}\n    //                 placeholder=\"Nombre\"\n    //                 onInput={(e) => setNombre(e.target.value)}\n    //               />\n    //             </Form.Group>\n    //             <Form.Group controlId=\"formGroupPassword\">\n    //               <Form.Label>Apellido Paterno</Form.Label>\n    //               <Form.Control\n    //                 type=\"text\"\n    //                 placeholder=\"Apellido Paterno\"\n    //                 value={apePaterno}\n    //                 onInput={(e) => setApePaterno(e.target.value)}\n    //               />\n    //             </Form.Group>\n    //             <Form.Group controlId=\"formGroupPassword\">\n    //               <Form.Label>Apellido Materno</Form.Label>\n    //               <Form.Control\n    //                 type=\"text\"\n    //                 placeholder=\"Apellido Paterno\"\n    //                 value={apeMaterno}\n    //                 onInput={(e) => setApeMaterno(e.target.value)}\n    //               />\n    //             </Form.Group>\n    //             <Form.Group controlId=\"formGroupPassword\">\n    //               <Form.Label>C.I</Form.Label>\n    //               <Form.Control\n    //                 type=\"num\"\n    //                 placeholder=\"C.I\"\n    //                 value={ci}\n    //                 onInput={(e) => setCi(e.target.value)}\n    //               />\n    //             </Form.Group>\n    //             <Form.Group controlId=\"exampleForm.ControlSelect2\">\n    //               <Form.Label>Genero</Form.Label>\n    //               <Form.Control\n    //                 as=\"select\"\n    //                 value={genero}\n    //                 onInput={(e) => setGenero(e.target.value)}\n    //               >\n    //                 <option>Femenino</option>\n    //                 <option>Masculino</option>\n    //               </Form.Control>\n    //             </Form.Group>\n    //             <Form.Group controlId=\"formGroupPassword\">\n    //               <Form.Label>Direccion</Form.Label>\n    //               <Form.Control\n    //                 type=\"text\"\n    //                 placeholder=\"Direaccion\"\n    //                 value={direccion}\n    //                 onInput={(e) => setDireccion(e.target.value)}\n    //               />\n    //             </Form.Group>\n    //             <Modal.Footer>\n    //               <Button\n    //                 variant=\"secondary\"\n    //                 onClick={() => {\n    //                   close(\n    //                     idUser,\n    //                     nombre,\n    //                     apePaterno,\n    //                     apeMaterno,\n    //                     ci,\n    //                     genero,\n    //                     direccion,\n    //                     { valor: false }\n    //                   );\n    //                 }}\n    //               >\n    //                 Close\n    //               </Button>\n    //               {idUser === null ? (\n    //                 <Button\n    //                   variant=\"primary\"\n    //                   onClick={() =>\n    //                     insert(\n    //                       nombre,\n    //                       apePaterno,\n    //                       apeMaterno,\n    //                       ci,\n    //                       genero,\n    //                       direccion,\n    //                       { valor: false }\n    //                     )\n    //                   }\n    //                 >\n    //                   {idUser === null ? \"Agregar\" : \"Modificar\"}\n    //                 </Button>\n    //               ) : (\n    //                 <Button\n    //                   variant=\"primary\"\n    //                   onClick={() =>\n    //                     actualizar(\n    //                       idUser,\n    //                       nombre,\n    //                       apePaterno,\n    //                       apeMaterno,\n    //                       ci,\n    //                       genero,\n    //                       direccion,\n    //                       { valor: false }\n    //                     )\n    //                   }\n    //                 >\n    //                   {idUser === null ? \"Agregar\" : \"Modificar\"}\n    //                 </Button>\n    //               )}\n    //             </Modal.Footer>\n    //           </Form>\n    //         </Modal.Body>\n    //       </Modal>\n    //     ) : (\n    //       () => console.log(\"cerrado\")\n    //     )}\n    //   </Table>\n    // </>\n    ;\n  }\n\n}\n\nexport default TableApi;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/usuarios/src/components/TableApi.jsx"],"names":["React","useState","Component","Table","Button","Modal","Form","userDelete","userUpdate","userInsert","TableApi","constructor","props","state","usuarios","componentWillMount","fetch","then","response","json","empleados","setState","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,KAAxB,EAA+BC,IAA/B,QAA2C,iBAA3C,C,CACA;;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,UAAP,MAAuB,uBAAvB,C,CACA;;AAEA,MAAMC,QAAN,SAAuBR,SAAvB,CAAiC;AAC/BS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAb;AACD;;AACDC,EAAAA,kBAAkB,GAAG;AACnBC,IAAAA,KAAK,CAAC,oDAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAc;AAClB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KAHH,EAIGF,IAJH,CAISG,SAAD,IAAe;AACnB,WAAKC,QAAL,CAAc;AAAEP,QAAAA,QAAQ,EAAEM;AAAZ,OAAd;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AACD,KAPH;AAQD;;AACDI,EAAAA,MAAM,GAAG;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,WAAO,KAAKX,KAAL,CAAWC,QAAX,KAAwB,CAAxB,gBACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADK,ggMD;;AAzS8B;;AA4SjC,eAAeJ,QAAf","sourcesContent":["import React, { useState, Component } from \"react\";\nimport { Table, Button, Modal, Form } from \"react-bootstrap\";\n// import useInitialState from \"../utils/hooks/useInitalState\";\nimport userDelete from \"../utils/hooks/delete\";\nimport userUpdate from \"../utils/hooks/update\";\nimport userInsert from \"../utils/hooks/Insert\";\n// const API = \"https://heroku-usuarios-api.herokuapp.com/usuarios\";\n\nclass TableApi extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { usuarios: [] };\n  }\n  componentWillMount() {\n    fetch(\"https://heroku-usuarios-api.herokuapp.com/usuarios\")\n      .then((response) => {\n        return response.json();\n      })\n      .then((empleados) => {\n        this.setState({ usuarios: empleados });\n        console.log(empleados);\n      });\n  }\n  render() {\n    // const initialState = useInitialState(API);\n    // const [stado, setStado] = useState(false);\n    // const [idUser, setIdUser] = useState(null);\n    // const [nombre, setNombre] = useState(null);\n    // const [apePaterno, setApePaterno] = useState(null);\n    // const [apeMaterno, setApeMaterno] = useState(null);\n    // const [ci, setCi] = useState(null);\n    // const [genero, setGenero] = useState(null);\n    // const [direccion, setDireccion] = useState(null);\n\n    // const eliminar = (id) => userDelete(id);\n    // const activo = ({ valor }) => {\n    //   setStado(valor);\n    // };\n\n    // const insert = (name, lastName, secondName, ci, gender, city, { valor }) =>\n    //   userInsert(name, lastName, secondName, ci, gender, city);\n    // function actualizar(\n    //   id_user,\n    //   name,\n    //   lastName,\n    //   secondName,\n    //   ci,\n    //   gender,\n    //   city,\n    //   { valor }\n    // ) {\n    //   actualizarUsers(id_user, name, lastName, secondName, ci, gender, city);\n    //   setStado(valor);\n    //   setIdUser(null);\n    //   setNombre(null);\n    //   setApePaterno(null);\n    //   setApeMaterno(null);\n    //   setCi(null);\n    //   setGenero(null);\n    //   setDireccion(null);\n    // }\n\n    // const close = (\n    //   id_user,\n    //   name,\n    //   lastName,\n    //   secondName,\n    //   ci,\n    //   gender,\n    //   city,\n    //   { valor }\n    // ) => {\n    //   setIdUser(null);\n    //   setNombre(null);\n    //   setApePaterno(null);\n    //   setApeMaterno(null);\n    //   setCi(null);\n    //   setGenero(null);\n    //   setDireccion(null);\n    //   setStado(valor);\n    // };\n    // const actualizarUsers = (\n    //   id_user,\n    //   name,\n    //   lastName,\n    //   secondName,\n    //   ci,\n    //   gender,\n    //   city\n    // ) => {\n    //   userUpdate(id_user, name, lastName, secondName, ci, gender, city);\n    // };\n\n    // function modificar(\n    //   id,\n    //   { valor },\n    //   nombre,\n    //   ape_p,\n    //   ape_m,\n    //   ci,\n    //   genero,\n    //   direccion\n    // ) {\n    //   setStado(valor);\n    //   setIdUser(id);\n    //   setNombre(nombre);\n    //   setApePaterno(ape_p);\n    //   setApeMaterno(ape_m);\n    //   setCi(ci);\n    //   setGenero(genero);\n    //   setDireccion(direccion);\n    // }\n\n    return this.state.usuarios === 0 ? (\n      <h1>Loading....</h1>\n    ) : (\n      <div></div>\n      // <>\n      //   <Button variant=\"primary\" onClick={() => activo({ valor: true })}>\n      //     Agregar\n      //   </Button>\n      //   <Table striped bordered hover variant=\"dark\">\n      //     <thead>\n      //       <tr>\n      //         <th>#</th>\n      //         <th>Nombre</th>\n      //         <th>Apellido Paterno</th>\n      //         <th>Apellido Materno</th>\n      //         <th>C.I</th>\n      //         <th>Genero</th>\n      //         <th>Direccion</th>\n      //         <th>Modificar</th>\n      //         <th>Eliminar</th>\n      //       </tr>\n      //     </thead>\n      //     <tbody>\n      //       {this.state.usuarios.length > 0 &&\n      //         this.state.usuarios.map((usuario, id) => (\n      //           <React.Fragment key={id}>\n      //             <tr>\n      //               <th>{usuario.id_usuario}</th>\n      //               <th>{usuario.nombre}</th>\n      //               <th>{usuario.apellido_paterno}</th>\n      //               <th>{usuario.apellido_materno}</th>\n      //               <th>{usuario.ci}</th>\n      //               <th>{usuario.genero}</th>\n      //               <th>{usuario.direccion}</th>\n      //               <th>\n      //                 <Button\n      //                   variant=\"success\"\n      //                   onClick={() =>\n      //                     modificar(\n      //                       usuario.id_usuario,\n      //                       { valor: true },\n      //                       usuario.nombre,\n      //                       usuario.apellido_paterno,\n      //                       usuario.apellido_materno,\n      //                       usuario.ci,\n      //                       usuario.genero,\n      //                       usuario.direccion\n      //                     )\n      //                   }\n      //                 >\n      //                   Modificar\n      //                 </Button>\n      //               </th>\n      //               <th>\n      //                 <Button\n      //                   variant=\"danger\"\n      //                   onClick={() => eliminar(usuario.id_usuario)}\n      //                 >\n      //                   Eliminar\n      //                 </Button>\n      //               </th>\n      //             </tr>\n      //           </React.Fragment>\n      //         ))}\n      //     </tbody>\n      //     {stado === true ? (\n      //       <Modal show={true}>\n      //         <Modal.Header closeButton onClick={() => setStado(false)}>\n      //           <Modal.Title>Modal heading</Modal.Title>\n      //         </Modal.Header>\n      //         <Modal.Body>\n      //           <Form>\n      //             <Form.Group controlId=\"formGroupEmail\">\n      //               <Form.Label>Nombre</Form.Label>\n      //               <Form.Control\n      //                 type=\"text\"\n      //                 value={nombre}\n      //                 placeholder=\"Nombre\"\n      //                 onInput={(e) => setNombre(e.target.value)}\n      //               />\n      //             </Form.Group>\n      //             <Form.Group controlId=\"formGroupPassword\">\n      //               <Form.Label>Apellido Paterno</Form.Label>\n      //               <Form.Control\n      //                 type=\"text\"\n      //                 placeholder=\"Apellido Paterno\"\n      //                 value={apePaterno}\n      //                 onInput={(e) => setApePaterno(e.target.value)}\n      //               />\n      //             </Form.Group>\n      //             <Form.Group controlId=\"formGroupPassword\">\n      //               <Form.Label>Apellido Materno</Form.Label>\n      //               <Form.Control\n      //                 type=\"text\"\n      //                 placeholder=\"Apellido Paterno\"\n      //                 value={apeMaterno}\n      //                 onInput={(e) => setApeMaterno(e.target.value)}\n      //               />\n      //             </Form.Group>\n      //             <Form.Group controlId=\"formGroupPassword\">\n      //               <Form.Label>C.I</Form.Label>\n      //               <Form.Control\n      //                 type=\"num\"\n      //                 placeholder=\"C.I\"\n      //                 value={ci}\n      //                 onInput={(e) => setCi(e.target.value)}\n      //               />\n      //             </Form.Group>\n      //             <Form.Group controlId=\"exampleForm.ControlSelect2\">\n      //               <Form.Label>Genero</Form.Label>\n      //               <Form.Control\n      //                 as=\"select\"\n      //                 value={genero}\n      //                 onInput={(e) => setGenero(e.target.value)}\n      //               >\n      //                 <option>Femenino</option>\n      //                 <option>Masculino</option>\n      //               </Form.Control>\n      //             </Form.Group>\n      //             <Form.Group controlId=\"formGroupPassword\">\n      //               <Form.Label>Direccion</Form.Label>\n      //               <Form.Control\n      //                 type=\"text\"\n      //                 placeholder=\"Direaccion\"\n      //                 value={direccion}\n      //                 onInput={(e) => setDireccion(e.target.value)}\n      //               />\n      //             </Form.Group>\n      //             <Modal.Footer>\n      //               <Button\n      //                 variant=\"secondary\"\n      //                 onClick={() => {\n      //                   close(\n      //                     idUser,\n      //                     nombre,\n      //                     apePaterno,\n      //                     apeMaterno,\n      //                     ci,\n      //                     genero,\n      //                     direccion,\n      //                     { valor: false }\n      //                   );\n      //                 }}\n      //               >\n      //                 Close\n      //               </Button>\n      //               {idUser === null ? (\n      //                 <Button\n      //                   variant=\"primary\"\n      //                   onClick={() =>\n      //                     insert(\n      //                       nombre,\n      //                       apePaterno,\n      //                       apeMaterno,\n      //                       ci,\n      //                       genero,\n      //                       direccion,\n      //                       { valor: false }\n      //                     )\n      //                   }\n      //                 >\n      //                   {idUser === null ? \"Agregar\" : \"Modificar\"}\n      //                 </Button>\n      //               ) : (\n      //                 <Button\n      //                   variant=\"primary\"\n      //                   onClick={() =>\n      //                     actualizar(\n      //                       idUser,\n      //                       nombre,\n      //                       apePaterno,\n      //                       apeMaterno,\n      //                       ci,\n      //                       genero,\n      //                       direccion,\n      //                       { valor: false }\n      //                     )\n      //                   }\n      //                 >\n      //                   {idUser === null ? \"Agregar\" : \"Modificar\"}\n      //                 </Button>\n      //               )}\n      //             </Modal.Footer>\n      //           </Form>\n      //         </Modal.Body>\n      //       </Modal>\n      //     ) : (\n      //       () => console.log(\"cerrado\")\n      //     )}\n      //   </Table>\n      // </>\n    );\n  }\n}\n\nexport default TableApi;\n"]},"metadata":{},"sourceType":"module"}